var tipuesearch = {"pages": [{'title': 'About', 'text': '2a-pj1ag16 \n 組員:41023132\xa0 https://github.com/mdecd2023/resume-BX41023132 \n \xa0 \xa0 \xa0 \xa0 41023151\xa0 https://github.com/mdecd2023/resume-urchen41023151 \n 倉儲: https://github.com/mdecd2023/2a-pj1ag16 \n 靜態網頁: https://mdecd2023.github.io/2a-pj1ag16/content/index.html \n 2apj1: https://mdecd2023.github.io/2a-pj1agx/content/2apj1.html \n 討論區: https://github.com/mdecd2023/football-apj1/discussions \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'w3', 'text': 'BubbleRob: https://mde.tw/cd2023/content/BubbleRob.html \n', 'tags': '', 'url': 'w3.html'}, {'title': '41023132心得', 'text': '這是的課程是要跟同學合作建立共同倉儲，一開始弄得很糟，一下子我的東西有問題，一下子我的partner的網站哪裡出錯，所以我們用了很久，一開始不知道token要設定90天，我用成永久，導致我們的網頁有錯，之後刪掉重新改正後就沒問題了。 \n', 'tags': '', 'url': '41023132心得.html'}, {'title': '41023151心得', 'text': '課程一開始建倉儲，遇到了非常多問題，一下子網站不同步、一下子無法acp、一下子是token的問題，後來請教了非常多同學，同學也很熱心地幫我們解答才順利地建完倉儲，雖然一開始手忙腳亂但後來也就慢慢地解決事情了。 \n', 'tags': '', 'url': '41023151心得.html'}, {'title': 'tutorial1', 'text': '1.球體碰撞模擬 \n /downloads/1.js \n \n 2.建立輪子、馬達 \n /downloads/2.js \n \n 3.成品 \n /downloads/3.js \n \n \n 檔案連結 \n /downloads/bubble2.ttt \n 4.程式 \n /downloads/4.js \n \n \n \n \n 檔案 \n /downloads/bubblerob .ttt \n \n', 'tags': '', 'url': 'tutorial1.html'}, {'title': '程式', 'text': '\n \n \n \n \n \n \n', 'tags': '', 'url': '程式.html'}, {'title': '專案管理', 'text': '1.確定項目目標和範圍 2.制定項目計劃 3.項目執行 4.項目監控 5.項目結束 通過有效的專案管理，項目管理人員可以最大程度地發揮資源和時間，以實現項目目標。 \n *專案管理是一種方法，用於幫助團隊追蹤正在進行的所有工作，以便按時完成專案要求。但在廣義的專案管理類別中，還有其他類型、方法和途徑，包括： \n 1.敏捷式專案管理 :\xa0 敏捷 法是一種 精實專案管理 模式，廣泛應用於產品、工程和軟體開發團隊。團隊相信透過敏捷法可持續改善，對改變做出靈活反應、實現疊代流程及累進式的演進。 \n 2.瀑布模型 :\xa0在瀑布模型中，任務以線性方式向下串聯：每當一個任務完成後，下一個任務即準備就緒，如此循環。 瀑布模型 包括 6 個階段：要求、分析、設計、編碼、測試以及營運。 \n 3.PRINCE2 方法 :\xa0PRINCE2 指受控環境下的專案管理第二版。在\xa0 PRINCE2 專案管理方法 中，專案分解為 7 個流程：指導專案、設立專案、實施專案、管理階段邊界、控制階段、管理產品交付以及結束專案。 \n 4. 關鍵路徑法 (CPM) \xa0和 計畫評核術 (PERT) \xa0:\xa0團隊可藉由 CPM 辨識出依存活動的最長延伸範圍。另一方面， PERT \xa0則有助團隊在時間軸和時間範圍未知的情況下辨識關鍵路徑。使用 PERT 時，專 案經理能夠辨識需要完成的所有任務 (而不僅是關鍵路徑而已)，從而判斷要完成整個專案所需的最短時間。 \n \n', 'tags': '', 'url': '專案管理.html'}, {'title': 'w6(H2)', 'text': '完成連線: ag1 41023147 41023143 ag2 41023146 41023148 ag5 41023121 41023134 ag 6 41023104 41023112 ag 7 41023103 41023106 ag 8 41023102 41023107 ag 9 41023130 41023142 ag 10 41023119 41023138 ag 11 41023122 41023124 ag 12 41023114 41023126 ag 13 41023133 41023140 ag 14 41023153 41023113 ag 15 41023154 41023135 ag 16 41023151 41023132 ag 17 41023118 41023120 ag 18 41023131 41039138 ag 21 41023137 41023116 未完成連線: ag 3 41023108 41023110  ag 4 41023125 41023128 ag 19 41023101 41023141 ag 20 41023105 41023109 \n \n \n', 'tags': '', 'url': 'w6(H2).html'}, {'title': 'football', 'text': '利用Inventor建立球場，再將檔案轉成stl檔匯入CoppeliaSim。 \n /downloads/ground.js \n \n 因為Inventor無法匯入，所以利用Solidworks建立球場，再將檔案轉成stl檔匯入CoppeliaSim。 \n /downloads/場地和球.js \n \n \n \n 場地: /downloads/球場.STL \n 場地和球: /downloads/bubblerob+ground .ttt \n \n \n \n 加入感測器。 \n \n \n \n \n \n \n 感測器: /downloads/bubblerob+ground+door .ttt \n \n', 'tags': '', 'url': 'football.html'}, {'title': '心得', 'text': '\n *W5起將建立一個由 pj1 各組組長所組成的統整作業, 目標是利用兩台 BubbleRob 雙輪車在一足球場景中進行對戰, 其中在雙方球門設置感測器, 雙方各有一名 BubbleRob 負責運球, 在規定時間內, 每進一球後, 即透過程式重新從球場中線發球重啟賽局. 其中各組必須設法配置計分板顯示比賽剩餘時間與比分 \n *W7 起所有設計內容與討論必須置入 football-apj1 的作業倉儲中 \n *W9 各班期中考週時段進行發表 , 各小組成員將進行自評與互評, 並在各班統整協同作業倉儲中,  完成一份 web-based 簡報以及 pdf 格式的統整作業報告 \n \n *football 作業中的 apj1 團隊: https://github.com/mdecd2023/football-apj1 \n \n 41023132林秉賢 \n 在嘗試用inventor畫完場地後，發現無法順利地轉入。 \n \n \n \n', 'tags': '', 'url': '心得.html'}, {'title': '分組報告', 'text': '協同分組報告設定檔案: \n \xa0 https://mdecd2023.github.io/resumescrum1/downloads/latex_cd_report_using_github_actions.7z\xa0 \n 利用上述 LaTeX 架構, 可以直接透過 \xa0 Github Actions \xa0 建立 \xa0 cd_report.pdf \xa0 (v0.0.1 版)', 'tags': '', 'url': '分組報告.html'}]};